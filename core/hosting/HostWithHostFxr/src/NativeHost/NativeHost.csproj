<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="$(SourceRoot)/DotNetLib/DotNetLib.csproj" />
  </ItemGroup>

  <PropertyGroup>
    <NativeBinDir>$(BinRoot)/$(Configuration)</NativeBinDir>
    <NativeOutputName>nativehost</NativeOutputName>

    <NativePlatform>$([System.Runtime.InteropServices.RuntimeInformation]::ProcessArchitecture)</NativePlatform>
    <NativeObjDir>$(MSBuildThisFileDirectory)obj/$(Configuration)/$(NativePlatform)/</NativeObjDir>

    <NetHostName Condition="$([MSBuild]::IsOsPlatform('Windows'))">nethost.dll</NetHostName>
    <NetHostName Condition="$([MSBuild]::IsOsPlatform('Linux'))">libnethost.so</NetHostName>
    <NetHostName Condition="$([MSBuild]::IsOsPlatform('OSX'))">libnethost.dylib</NetHostName>
  </PropertyGroup>

  <!-- Properties for MSVCFindCompilerPaths -->
  <PropertyGroup Condition="$([MSBuild]::IsOsPlatform('Windows'))">
    <MSVCPlatform>$(NativePlatform)</MSVCPlatform>
  </PropertyGroup>

  <ItemGroup>
    <NativeSource Include="nativehost.cpp" />
    <Clean Include="$(NativeBinDir)/$(NativeOutputName).*" />
    <Clean Include="$(NativeBinDir)/$(NetHostName)" />
    <Clean Include="$(NativeObjDir)/*.*" />
  </ItemGroup>

  <!-- This is to hide all the source files in VS to make the project cleaner,
       but also to include them in the build so that when the source is modified the build will rerun the C++ compiler. -->
  <ItemGroup>
    <Content Include="*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </Content>
    <Content Include="inc/*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CompilerPaths"
                      Version="[1.0.1, )"
                      Condition="$([MSBuild]::IsOsPlatform('Windows'))" />
  </ItemGroup>

  <!-- Targets to build the native project. The output goes directly to the bin directory -->
  <Target Name="PrepareForNativeBuild">
    <PropertyGroup>
      <NativeOutputExtension Condition="$([MSBuild]::IsOsPlatform('Windows'))">.exe</NativeOutputExtension>
      <NativeOutputFilePath>$(NativeBinDir)/$(NativeOutputName)$(NativeOutputExtension)</NativeOutputFilePath>
      <NetHostDir>$(NetCoreTargetingPackRoot)/Microsoft.NETCore.App.Host.$(NETCoreSdkRuntimeIdentifier)/$(BundledNETCoreAppPackageVersion)/runtimes/$(NETCoreSdkRuntimeIdentifier)/native</NetHostDir>

      <SourceFiles>@(NativeSource-> '&quot;%(RootDir)%(Directory)%(Filename)%(Extension)&quot;', ' ')</SourceFiles>
    </PropertyGroup>

    <MakeDir Directories="$(NativeBinDir)" />
    <MakeDir Directories="$(NativeObjDir)" />

    <!-- Copy the nethost library to the demo directory -->
    <Copy SourceFiles="$(NetHostDir)/$(NetHostName)"
          DestinationFolder="$(NativeBinDir)"
          SkipUnchangedFiles="True" />
  </Target>

  <Target Name="BuildNativeProjectUnix"
          AfterTargets="Build"
          DependsOnTargets="PrepareForNativeBuild"
          Condition="$([MSBuild]::IsOsPlatform('Linux')) OR $([MSBuild]::IsOsPlatform('OSX'))">
    <PropertyGroup>
      <IncPaths>-I&quot;$(NetHostDir)&quot; -I&quot;$(MSBuildThisFileDirectory)inc&quot;</IncPaths>
      <CompilerArgs>-g</CompilerArgs>
      <LinkArgs>-ldl -lnethost -L&quot;$(NetHostDir)&quot;</LinkArgs>
    </PropertyGroup>
    <PropertyGroup Condition="$([MSBuild]::IsOsPlatform('Linux'))">
      <PreprocessorDefines>-D LINUX</PreprocessorDefines>
      <LinkArgs>$(LinkArgs) -Wl,-rpath,'$ORIGIN',--disable-new-dtags</LinkArgs>
    </PropertyGroup>
    <PropertyGroup Condition="$([MSBuild]::IsOsPlatform('OSX'))">
      <PreprocessorDefines>-D OSX</PreprocessorDefines>
      <LinkArgs>$(LinkArgs) -Wl,-rpath,'@loader_path'</LinkArgs>
    </PropertyGroup>

    <Exec Command="g++ $(SourceFiles) $(IncPaths) $(PreprocessorDefines) -pthread -std=c++11 -o &quot;$(NativeOutputFilePath)&quot; $(CompilerArgs) $(LinkArgs)"
          WorkingDirectory="$(NativeObjDir)"
          ConsoleToMsBuild="true" />
  </Target>

  <Target Name="BuildNativeProjectWindows"
          AfterTargets="Build"
          DependsOnTargets="PrepareForNativeBuild;MSVCFindCompilerPaths"
          Condition="$([MSBuild]::IsOsPlatform('Windows'))">
    <PropertyGroup>
      <IncPaths>@(MSVCIncludePaths-> '/I &quot;%(RootDir)%(Directory)%(Filename)&quot;', ' ')</IncPaths>
      <IncPaths>$(IncPaths) /I &quot;$(NetHostDir)&quot; /I &quot;$(MSBuildThisFileDirectory)inc&quot;</IncPaths>
      <CompilerArgs>/EHsc /Od /GS /sdl /Zi</CompilerArgs>
      <PreprocessorDefines>/D WINDOWS</PreprocessorDefines>
      <LibPaths>@(MSVCLibPaths-> '/LIBPATH:&quot;%(RootDir)%(Directory)%(Filename)&quot;', ' ')</LibPaths>
    </PropertyGroup>

    <Exec Command="&quot;$(MSVCCompilerPath)&quot; $(SourceFiles) $(IncPaths) $(PreprocessorDefines) $(CompilerArgs) /link $(LibPaths) &quot;$(NetHostDir)\nethost.lib&quot; /out:&quot;$(NativeOutputFilePath)&quot;"
          WorkingDirectory="$(NativeObjDir)"
          ConsoleToMsBuild="true" />
  </Target>
</Project>
